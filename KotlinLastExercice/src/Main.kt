data class City(var name: String)
data class Shop(var name: String, var customers: List<Customer>)
data class Product(var name: String, var price: Double)
data class Order(var products: List<Product>,var isDelivered: Boolean )
data class Customer(var name: String, var city: City, var orders: List<Order>)

fun main () {
    println(shopInternet.getSetofCustomer())
    println(shopInternet.getCitiesCustomersAreFrom())
    println(shopInternet.getCustomersFrom(cityParis))
    println(shopInternetParis.checkAllCustomersAreFrom(cityParis))
    println(shopInternet.checkAllCustomersAreFrom(cityParis))
    println(shopInternet.hasCustomerFrom(cityMontpel))
    println(shopInternet.hasCustomerFrom(cityAvecPerson))
    println(shopInternetParis.countCustomersFrom(cityParis))
    println(shopInternetParis.findAnyCustomerFrom(cityParis))
    println(shopInternetParis.findAnyCustomerFrom(cityPaum√©))
    println(customer1.orderedProducts)
    println(customer3.orderedProducts)
    println(shopInternetParis.allOrderedProducts)
    println(shopInternet.getCustomerWithMaximumNumberOfOrders())
    println(customer3.getMostExpensiveOrderedProduct())
    println(shopInternet.getCustomersSortedByNumberOfOrders())
    println(customer3.getTotalOrderPrice())
    println(shopLocal.groupCustomersByCity())
    println(shopLocal.getCustomersWithMoreUndeliveredOrdersThanDelivered())
    println(shopInternet.getSetOfProductsOrderedByEveryCustomer())
}